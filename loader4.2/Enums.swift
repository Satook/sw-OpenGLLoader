// NOTE: This file is generated.
// Copyright (c) 2017 Andrew Stewart
// Copyright (c) 2013-2016 The Khronos Group Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and/or associated documentation files (the "Materials"),
// to deal in the Materials without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Materials, and to
// permit persons to whom the Materials are furnished to do so, subject to
// the following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Materials.
//
// THE MATERIALS ARE PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
// MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.


// ENUMS for profile GL_VERSION_4_2
public let GL_ACTIVE_ATOMIC_COUNTER_BUFFERS = UInt32(integerLiteral: 0x000092D9)
public let GL_ACTIVE_ATTRIBUTES = UInt32(integerLiteral: 0x00008B89)
public let GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = UInt32(integerLiteral: 0x00008B8A)
public let GL_ACTIVE_PROGRAM = UInt32(integerLiteral: 0x00008259)
public let GL_ACTIVE_SUBROUTINES = UInt32(integerLiteral: 0x00008DE5)
public let GL_ACTIVE_SUBROUTINE_MAX_LENGTH = UInt32(integerLiteral: 0x00008E48)
public let GL_ACTIVE_SUBROUTINE_UNIFORMS = UInt32(integerLiteral: 0x00008DE6)
public let GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = UInt32(integerLiteral: 0x00008E47)
public let GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = UInt32(integerLiteral: 0x00008E49)
public let GL_ACTIVE_TEXTURE = UInt32(integerLiteral: 0x000084E0)
public let GL_ACTIVE_UNIFORMS = UInt32(integerLiteral: 0x00008B86)
public let GL_ACTIVE_UNIFORM_BLOCKS = UInt32(integerLiteral: 0x00008A36)
public let GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = UInt32(integerLiteral: 0x00008A35)
public let GL_ACTIVE_UNIFORM_MAX_LENGTH = UInt32(integerLiteral: 0x00008B87)
public let GL_ALIASED_LINE_WIDTH_RANGE = UInt32(integerLiteral: 0x0000846E)
public let GL_ALL_BARRIER_BITS = UInt32(integerLiteral: 0xFFFFFFFF)
public let GL_ALL_SHADER_BITS = UInt32(integerLiteral: 0xFFFFFFFF)
public let GL_ALPHA = UInt32(integerLiteral: 0x00001906)
public let GL_ALREADY_SIGNALED = UInt32(integerLiteral: 0x0000911A)
public let GL_ALWAYS = UInt32(integerLiteral: 0x000207)
public let GL_AND = UInt32(integerLiteral: 0x00001501)
public let GL_AND_INVERTED = UInt32(integerLiteral: 0x00001504)
public let GL_AND_REVERSE = UInt32(integerLiteral: 0x00001502)
public let GL_ANY_SAMPLES_PASSED = UInt32(integerLiteral: 0x00008C2F)
public let GL_ARRAY_BUFFER = UInt32(integerLiteral: 0x00008892)
public let GL_ARRAY_BUFFER_BINDING = UInt32(integerLiteral: 0x00008894)
public let GL_ATOMIC_COUNTER_BARRIER_BIT = UInt32(integerLiteral: 0x00001000)
public let GL_ATOMIC_COUNTER_BUFFER = UInt32(integerLiteral: 0x000092C0)
public let GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS = UInt32(integerLiteral: 0x000092C5)
public let GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES = UInt32(integerLiteral: 0x000092C6)
public let GL_ATOMIC_COUNTER_BUFFER_BINDING = UInt32(integerLiteral: 0x000092C1)
public let GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE = UInt32(integerLiteral: 0x000092C4)
public let GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER = UInt32(integerLiteral: 0x000092CB)
public let GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER = UInt32(integerLiteral: 0x000092CA)
public let GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER = UInt32(integerLiteral: 0x000092C8)
public let GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER = UInt32(integerLiteral: 0x000092C9)
public let GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER = UInt32(integerLiteral: 0x000092C7)
public let GL_ATOMIC_COUNTER_BUFFER_SIZE = UInt32(integerLiteral: 0x000092C3)
public let GL_ATOMIC_COUNTER_BUFFER_START = UInt32(integerLiteral: 0x000092C2)
public let GL_ATTACHED_SHADERS = UInt32(integerLiteral: 0x00008B85)
public let GL_BACK = UInt32(integerLiteral: 0x000405)
public let GL_BACK_LEFT = UInt32(integerLiteral: 0x000402)
public let GL_BACK_RIGHT = UInt32(integerLiteral: 0x000403)
public let GL_BGR = UInt32(integerLiteral: 0x000080E0)
public let GL_BGRA = UInt32(integerLiteral: 0x000080E1)
public let GL_BGRA_INTEGER = UInt32(integerLiteral: 0x00008D9B)
public let GL_BGR_INTEGER = UInt32(integerLiteral: 0x00008D9A)
public let GL_BLEND = UInt32(integerLiteral: 0x000BE2)
public let GL_BLEND_COLOR = UInt32(integerLiteral: 0x00008005)
public let GL_BLEND_DST = UInt32(integerLiteral: 0x000BE0)
public let GL_BLEND_DST_ALPHA = UInt32(integerLiteral: 0x000080CA)
public let GL_BLEND_DST_RGB = UInt32(integerLiteral: 0x000080C8)
public let GL_BLEND_EQUATION = UInt32(integerLiteral: 0x00008009)
public let GL_BLEND_EQUATION_ALPHA = UInt32(integerLiteral: 0x0000883D)
public let GL_BLEND_EQUATION_RGB = UInt32(integerLiteral: 0x00008009)
public let GL_BLEND_SRC = UInt32(integerLiteral: 0x000BE1)
public let GL_BLEND_SRC_ALPHA = UInt32(integerLiteral: 0x000080CB)
public let GL_BLEND_SRC_RGB = UInt32(integerLiteral: 0x000080C9)
public let GL_BLUE = UInt32(integerLiteral: 0x00001905)
public let GL_BLUE_INTEGER = UInt32(integerLiteral: 0x00008D96)
public let GL_BOOL = UInt32(integerLiteral: 0x00008B56)
public let GL_BOOL_VEC2 = UInt32(integerLiteral: 0x00008B57)
public let GL_BOOL_VEC3 = UInt32(integerLiteral: 0x00008B58)
public let GL_BOOL_VEC4 = UInt32(integerLiteral: 0x00008B59)
public let GL_BUFFER_ACCESS = UInt32(integerLiteral: 0x000088BB)
public let GL_BUFFER_ACCESS_FLAGS = UInt32(integerLiteral: 0x0000911F)
public let GL_BUFFER_MAPPED = UInt32(integerLiteral: 0x000088BC)
public let GL_BUFFER_MAP_LENGTH = UInt32(integerLiteral: 0x00009120)
public let GL_BUFFER_MAP_OFFSET = UInt32(integerLiteral: 0x00009121)
public let GL_BUFFER_MAP_POINTER = UInt32(integerLiteral: 0x000088BD)
public let GL_BUFFER_SIZE = UInt32(integerLiteral: 0x00008764)
public let GL_BUFFER_UPDATE_BARRIER_BIT = UInt32(integerLiteral: 0x000200)
public let GL_BUFFER_USAGE = UInt32(integerLiteral: 0x00008765)
public let GL_BYTE = UInt32(integerLiteral: 0x00001400)
public let GL_CCW = UInt32(integerLiteral: 0x000901)
public let GL_CLAMP_READ_COLOR = UInt32(integerLiteral: 0x0000891C)
public let GL_CLAMP_TO_BORDER = UInt32(integerLiteral: 0x0000812D)
public let GL_CLAMP_TO_EDGE = UInt32(integerLiteral: 0x0000812F)
public let GL_CLEAR = UInt32(integerLiteral: 0x00001500)
public let GL_CLIP_DISTANCE0 = UInt32(integerLiteral: 0x00003000)
public let GL_CLIP_DISTANCE1 = UInt32(integerLiteral: 0x00003001)
public let GL_CLIP_DISTANCE2 = UInt32(integerLiteral: 0x00003002)
public let GL_CLIP_DISTANCE3 = UInt32(integerLiteral: 0x00003003)
public let GL_CLIP_DISTANCE4 = UInt32(integerLiteral: 0x00003004)
public let GL_CLIP_DISTANCE5 = UInt32(integerLiteral: 0x00003005)
public let GL_CLIP_DISTANCE6 = UInt32(integerLiteral: 0x00003006)
public let GL_CLIP_DISTANCE7 = UInt32(integerLiteral: 0x00003007)
public let GL_COLOR = UInt32(integerLiteral: 0x00001800)
public let GL_COLOR_ATTACHMENT0 = UInt32(integerLiteral: 0x00008CE0)
public let GL_COLOR_ATTACHMENT1 = UInt32(integerLiteral: 0x00008CE1)
public let GL_COLOR_ATTACHMENT10 = UInt32(integerLiteral: 0x00008CEA)
public let GL_COLOR_ATTACHMENT11 = UInt32(integerLiteral: 0x00008CEB)
public let GL_COLOR_ATTACHMENT12 = UInt32(integerLiteral: 0x00008CEC)
public let GL_COLOR_ATTACHMENT13 = UInt32(integerLiteral: 0x00008CED)
public let GL_COLOR_ATTACHMENT14 = UInt32(integerLiteral: 0x00008CEE)
public let GL_COLOR_ATTACHMENT15 = UInt32(integerLiteral: 0x00008CEF)
public let GL_COLOR_ATTACHMENT16 = UInt32(integerLiteral: 0x00008CF0)
public let GL_COLOR_ATTACHMENT17 = UInt32(integerLiteral: 0x00008CF1)
public let GL_COLOR_ATTACHMENT18 = UInt32(integerLiteral: 0x00008CF2)
public let GL_COLOR_ATTACHMENT19 = UInt32(integerLiteral: 0x00008CF3)
public let GL_COLOR_ATTACHMENT2 = UInt32(integerLiteral: 0x00008CE2)
public let GL_COLOR_ATTACHMENT20 = UInt32(integerLiteral: 0x00008CF4)
public let GL_COLOR_ATTACHMENT21 = UInt32(integerLiteral: 0x00008CF5)
public let GL_COLOR_ATTACHMENT22 = UInt32(integerLiteral: 0x00008CF6)
public let GL_COLOR_ATTACHMENT23 = UInt32(integerLiteral: 0x00008CF7)
public let GL_COLOR_ATTACHMENT24 = UInt32(integerLiteral: 0x00008CF8)
public let GL_COLOR_ATTACHMENT25 = UInt32(integerLiteral: 0x00008CF9)
public let GL_COLOR_ATTACHMENT26 = UInt32(integerLiteral: 0x00008CFA)
public let GL_COLOR_ATTACHMENT27 = UInt32(integerLiteral: 0x00008CFB)
public let GL_COLOR_ATTACHMENT28 = UInt32(integerLiteral: 0x00008CFC)
public let GL_COLOR_ATTACHMENT29 = UInt32(integerLiteral: 0x00008CFD)
public let GL_COLOR_ATTACHMENT3 = UInt32(integerLiteral: 0x00008CE3)
public let GL_COLOR_ATTACHMENT30 = UInt32(integerLiteral: 0x00008CFE)
public let GL_COLOR_ATTACHMENT31 = UInt32(integerLiteral: 0x00008CFF)
public let GL_COLOR_ATTACHMENT4 = UInt32(integerLiteral: 0x00008CE4)
public let GL_COLOR_ATTACHMENT5 = UInt32(integerLiteral: 0x00008CE5)
public let GL_COLOR_ATTACHMENT6 = UInt32(integerLiteral: 0x00008CE6)
public let GL_COLOR_ATTACHMENT7 = UInt32(integerLiteral: 0x00008CE7)
public let GL_COLOR_ATTACHMENT8 = UInt32(integerLiteral: 0x00008CE8)
public let GL_COLOR_ATTACHMENT9 = UInt32(integerLiteral: 0x00008CE9)
public let GL_COLOR_BUFFER_BIT = UInt32(integerLiteral: 0x00004000)
public let GL_COLOR_CLEAR_VALUE = UInt32(integerLiteral: 0x000C22)
public let GL_COLOR_LOGIC_OP = UInt32(integerLiteral: 0x000BF2)
public let GL_COLOR_WRITEMASK = UInt32(integerLiteral: 0x000C23)
public let GL_COMMAND_BARRIER_BIT = UInt32(integerLiteral: 0x000040)
public let GL_COMPARE_REF_TO_TEXTURE = UInt32(integerLiteral: 0x0000884E)
public let GL_COMPATIBLE_SUBROUTINES = UInt32(integerLiteral: 0x00008E4B)
public let GL_COMPILE_STATUS = UInt32(integerLiteral: 0x00008B81)
public let GL_COMPRESSED_RED = UInt32(integerLiteral: 0x00008225)
public let GL_COMPRESSED_RED_RGTC1 = UInt32(integerLiteral: 0x00008DBB)
public let GL_COMPRESSED_RG = UInt32(integerLiteral: 0x00008226)
public let GL_COMPRESSED_RGB = UInt32(integerLiteral: 0x000084ED)
public let GL_COMPRESSED_RGBA = UInt32(integerLiteral: 0x000084EE)
public let GL_COMPRESSED_RGBA_BPTC_UNORM = UInt32(integerLiteral: 0x00008E8C)
public let GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT = UInt32(integerLiteral: 0x00008E8E)
public let GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT = UInt32(integerLiteral: 0x00008E8F)
public let GL_COMPRESSED_RG_RGTC2 = UInt32(integerLiteral: 0x00008DBD)
public let GL_COMPRESSED_SIGNED_RED_RGTC1 = UInt32(integerLiteral: 0x00008DBC)
public let GL_COMPRESSED_SIGNED_RG_RGTC2 = UInt32(integerLiteral: 0x00008DBE)
public let GL_COMPRESSED_SRGB = UInt32(integerLiteral: 0x00008C48)
public let GL_COMPRESSED_SRGB_ALPHA = UInt32(integerLiteral: 0x00008C49)
public let GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM = UInt32(integerLiteral: 0x00008E8D)
public let GL_COMPRESSED_TEXTURE_FORMATS = UInt32(integerLiteral: 0x000086A3)
public let GL_CONDITION_SATISFIED = UInt32(integerLiteral: 0x0000911C)
public let GL_CONSTANT_ALPHA = UInt32(integerLiteral: 0x00008003)
public let GL_CONSTANT_COLOR = UInt32(integerLiteral: 0x00008001)
public let GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = UInt32(integerLiteral: 0x00002)
public let GL_CONTEXT_CORE_PROFILE_BIT = UInt32(integerLiteral: 0x00001)
public let GL_CONTEXT_FLAGS = UInt32(integerLiteral: 0x0000821E)
public let GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = UInt32(integerLiteral: 0x00001)
public let GL_CONTEXT_PROFILE_MASK = UInt32(integerLiteral: 0x00009126)
public let GL_COPY = UInt32(integerLiteral: 0x00001503)
public let GL_COPY_INVERTED = UInt32(integerLiteral: 0x0000150C)
public let GL_COPY_READ_BUFFER = UInt32(integerLiteral: 0x00008F36)
public let GL_COPY_READ_BUFFER_BINDING = UInt32(integerLiteral: 0x00008F36)
public let GL_COPY_WRITE_BUFFER = UInt32(integerLiteral: 0x00008F37)
public let GL_COPY_WRITE_BUFFER_BINDING = UInt32(integerLiteral: 0x00008F37)
public let GL_CULL_FACE = UInt32(integerLiteral: 0x000B44)
public let GL_CULL_FACE_MODE = UInt32(integerLiteral: 0x000B45)
public let GL_CURRENT_PROGRAM = UInt32(integerLiteral: 0x00008B8D)
public let GL_CURRENT_QUERY = UInt32(integerLiteral: 0x00008865)
public let GL_CURRENT_VERTEX_ATTRIB = UInt32(integerLiteral: 0x00008626)
public let GL_CW = UInt32(integerLiteral: 0x000900)
public let GL_DECR = UInt32(integerLiteral: 0x00001E03)
public let GL_DECR_WRAP = UInt32(integerLiteral: 0x00008508)
public let GL_DELETE_STATUS = UInt32(integerLiteral: 0x00008B80)
public let GL_DEPTH = UInt32(integerLiteral: 0x00001801)
public let GL_DEPTH24_STENCIL8 = UInt32(integerLiteral: 0x000088F0)
public let GL_DEPTH32F_STENCIL8 = UInt32(integerLiteral: 0x00008CAD)
public let GL_DEPTH_ATTACHMENT = UInt32(integerLiteral: 0x00008D00)
public let GL_DEPTH_BUFFER_BIT = UInt32(integerLiteral: 0x000100)
public let GL_DEPTH_CLAMP = UInt32(integerLiteral: 0x0000864F)
public let GL_DEPTH_CLEAR_VALUE = UInt32(integerLiteral: 0x000B73)
public let GL_DEPTH_COMPONENT = UInt32(integerLiteral: 0x00001902)
public let GL_DEPTH_COMPONENT16 = UInt32(integerLiteral: 0x000081A5)
public let GL_DEPTH_COMPONENT24 = UInt32(integerLiteral: 0x000081A6)
public let GL_DEPTH_COMPONENT32 = UInt32(integerLiteral: 0x000081A7)
public let GL_DEPTH_COMPONENT32F = UInt32(integerLiteral: 0x00008CAC)
public let GL_DEPTH_FUNC = UInt32(integerLiteral: 0x000B74)
public let GL_DEPTH_RANGE = UInt32(integerLiteral: 0x000B70)
public let GL_DEPTH_STENCIL = UInt32(integerLiteral: 0x000084F9)
public let GL_DEPTH_STENCIL_ATTACHMENT = UInt32(integerLiteral: 0x0000821A)
public let GL_DEPTH_TEST = UInt32(integerLiteral: 0x000B71)
public let GL_DEPTH_WRITEMASK = UInt32(integerLiteral: 0x000B72)
public let GL_DITHER = UInt32(integerLiteral: 0x000BD0)
public let GL_DONT_CARE = UInt32(integerLiteral: 0x00001100)
public let GL_DOUBLE = UInt32(integerLiteral: 0x0000140A)
public let GL_DOUBLEBUFFER = UInt32(integerLiteral: 0x000C32)
public let GL_DOUBLE_MAT2 = UInt32(integerLiteral: 0x00008F46)
public let GL_DOUBLE_MAT2x3 = UInt32(integerLiteral: 0x00008F49)
public let GL_DOUBLE_MAT2x4 = UInt32(integerLiteral: 0x00008F4A)
public let GL_DOUBLE_MAT3 = UInt32(integerLiteral: 0x00008F47)
public let GL_DOUBLE_MAT3x2 = UInt32(integerLiteral: 0x00008F4B)
public let GL_DOUBLE_MAT3x4 = UInt32(integerLiteral: 0x00008F4C)
public let GL_DOUBLE_MAT4 = UInt32(integerLiteral: 0x00008F48)
public let GL_DOUBLE_MAT4x2 = UInt32(integerLiteral: 0x00008F4D)
public let GL_DOUBLE_MAT4x3 = UInt32(integerLiteral: 0x00008F4E)
public let GL_DOUBLE_VEC2 = UInt32(integerLiteral: 0x00008FFC)
public let GL_DOUBLE_VEC3 = UInt32(integerLiteral: 0x00008FFD)
public let GL_DOUBLE_VEC4 = UInt32(integerLiteral: 0x00008FFE)
public let GL_DRAW_BUFFER = UInt32(integerLiteral: 0x000C01)
public let GL_DRAW_BUFFER0 = UInt32(integerLiteral: 0x00008825)
public let GL_DRAW_BUFFER1 = UInt32(integerLiteral: 0x00008826)
public let GL_DRAW_BUFFER10 = UInt32(integerLiteral: 0x0000882F)
public let GL_DRAW_BUFFER11 = UInt32(integerLiteral: 0x00008830)
public let GL_DRAW_BUFFER12 = UInt32(integerLiteral: 0x00008831)
public let GL_DRAW_BUFFER13 = UInt32(integerLiteral: 0x00008832)
public let GL_DRAW_BUFFER14 = UInt32(integerLiteral: 0x00008833)
public let GL_DRAW_BUFFER15 = UInt32(integerLiteral: 0x00008834)
public let GL_DRAW_BUFFER2 = UInt32(integerLiteral: 0x00008827)
public let GL_DRAW_BUFFER3 = UInt32(integerLiteral: 0x00008828)
public let GL_DRAW_BUFFER4 = UInt32(integerLiteral: 0x00008829)
public let GL_DRAW_BUFFER5 = UInt32(integerLiteral: 0x0000882A)
public let GL_DRAW_BUFFER6 = UInt32(integerLiteral: 0x0000882B)
public let GL_DRAW_BUFFER7 = UInt32(integerLiteral: 0x0000882C)
public let GL_DRAW_BUFFER8 = UInt32(integerLiteral: 0x0000882D)
public let GL_DRAW_BUFFER9 = UInt32(integerLiteral: 0x0000882E)
public let GL_DRAW_FRAMEBUFFER = UInt32(integerLiteral: 0x00008CA9)
public let GL_DRAW_FRAMEBUFFER_BINDING = UInt32(integerLiteral: 0x00008CA6)
public let GL_DRAW_INDIRECT_BUFFER = UInt32(integerLiteral: 0x00008F3F)
public let GL_DRAW_INDIRECT_BUFFER_BINDING = UInt32(integerLiteral: 0x00008F43)
public let GL_DST_ALPHA = UInt32(integerLiteral: 0x000304)
public let GL_DST_COLOR = UInt32(integerLiteral: 0x000306)
public let GL_DYNAMIC_COPY = UInt32(integerLiteral: 0x000088EA)
public let GL_DYNAMIC_DRAW = UInt32(integerLiteral: 0x000088E8)
public let GL_DYNAMIC_READ = UInt32(integerLiteral: 0x000088E9)
public let GL_ELEMENT_ARRAY_BARRIER_BIT = UInt32(integerLiteral: 0x00002)
public let GL_ELEMENT_ARRAY_BUFFER = UInt32(integerLiteral: 0x00008893)
public let GL_ELEMENT_ARRAY_BUFFER_BINDING = UInt32(integerLiteral: 0x00008895)
public let GL_EQUAL = UInt32(integerLiteral: 0x000202)
public let GL_EQUIV = UInt32(integerLiteral: 0x00001509)
public let GL_EXTENSIONS = UInt32(integerLiteral: 0x00001F03)
public let GL_FALSE = UInt32(integerLiteral: 0)
public let GL_FASTEST = UInt32(integerLiteral: 0x00001101)
public let GL_FILL = UInt32(integerLiteral: 0x00001B02)
public let GL_FIRST_VERTEX_CONVENTION = UInt32(integerLiteral: 0x00008E4D)
public let GL_FIXED = UInt32(integerLiteral: 0x0000140C)
public let GL_FIXED_ONLY = UInt32(integerLiteral: 0x0000891D)
public let GL_FLOAT = UInt32(integerLiteral: 0x00001406)
public let GL_FLOAT_32_UNSIGNED_INT_24_8_REV = UInt32(integerLiteral: 0x00008DAD)
public let GL_FLOAT_MAT2 = UInt32(integerLiteral: 0x00008B5A)
public let GL_FLOAT_MAT2x3 = UInt32(integerLiteral: 0x00008B65)
public let GL_FLOAT_MAT2x4 = UInt32(integerLiteral: 0x00008B66)
public let GL_FLOAT_MAT3 = UInt32(integerLiteral: 0x00008B5B)
public let GL_FLOAT_MAT3x2 = UInt32(integerLiteral: 0x00008B67)
public let GL_FLOAT_MAT3x4 = UInt32(integerLiteral: 0x00008B68)
public let GL_FLOAT_MAT4 = UInt32(integerLiteral: 0x00008B5C)
public let GL_FLOAT_MAT4x2 = UInt32(integerLiteral: 0x00008B69)
public let GL_FLOAT_MAT4x3 = UInt32(integerLiteral: 0x00008B6A)
public let GL_FLOAT_VEC2 = UInt32(integerLiteral: 0x00008B50)
public let GL_FLOAT_VEC3 = UInt32(integerLiteral: 0x00008B51)
public let GL_FLOAT_VEC4 = UInt32(integerLiteral: 0x00008B52)
public let GL_FRACTIONAL_EVEN = UInt32(integerLiteral: 0x00008E7C)
public let GL_FRACTIONAL_ODD = UInt32(integerLiteral: 0x00008E7B)
public let GL_FRAGMENT_INTERPOLATION_OFFSET_BITS = UInt32(integerLiteral: 0x00008E5D)
public let GL_FRAGMENT_SHADER = UInt32(integerLiteral: 0x00008B30)
public let GL_FRAGMENT_SHADER_BIT = UInt32(integerLiteral: 0x00002)
public let GL_FRAGMENT_SHADER_DERIVATIVE_HINT = UInt32(integerLiteral: 0x00008B8B)
public let GL_FRAMEBUFFER = UInt32(integerLiteral: 0x00008D40)
public let GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = UInt32(integerLiteral: 0x00008215)
public let GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = UInt32(integerLiteral: 0x00008214)
public let GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = UInt32(integerLiteral: 0x00008210)
public let GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = UInt32(integerLiteral: 0x00008211)
public let GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = UInt32(integerLiteral: 0x00008216)
public let GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = UInt32(integerLiteral: 0x00008213)
public let GL_FRAMEBUFFER_ATTACHMENT_LAYERED = UInt32(integerLiteral: 0x00008DA7)
public let GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = UInt32(integerLiteral: 0x00008CD1)
public let GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = UInt32(integerLiteral: 0x00008CD0)
public let GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = UInt32(integerLiteral: 0x00008212)
public let GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = UInt32(integerLiteral: 0x00008217)
public let GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = UInt32(integerLiteral: 0x00008CD3)
public let GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = UInt32(integerLiteral: 0x00008CD4)
public let GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = UInt32(integerLiteral: 0x00008CD2)
public let GL_FRAMEBUFFER_BARRIER_BIT = UInt32(integerLiteral: 0x000400)
public let GL_FRAMEBUFFER_BINDING = UInt32(integerLiteral: 0x00008CA6)
public let GL_FRAMEBUFFER_COMPLETE = UInt32(integerLiteral: 0x00008CD5)
public let GL_FRAMEBUFFER_DEFAULT = UInt32(integerLiteral: 0x00008218)
public let GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = UInt32(integerLiteral: 0x00008CD6)
public let GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = UInt32(integerLiteral: 0x00008CDB)
public let GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = UInt32(integerLiteral: 0x00008DA8)
public let GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = UInt32(integerLiteral: 0x00008CD7)
public let GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = UInt32(integerLiteral: 0x00008D56)
public let GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = UInt32(integerLiteral: 0x00008CDC)
public let GL_FRAMEBUFFER_SRGB = UInt32(integerLiteral: 0x00008DB9)
public let GL_FRAMEBUFFER_UNDEFINED = UInt32(integerLiteral: 0x00008219)
public let GL_FRAMEBUFFER_UNSUPPORTED = UInt32(integerLiteral: 0x00008CDD)
public let GL_FRONT = UInt32(integerLiteral: 0x000404)
public let GL_FRONT_AND_BACK = UInt32(integerLiteral: 0x000408)
public let GL_FRONT_FACE = UInt32(integerLiteral: 0x000B46)
public let GL_FRONT_LEFT = UInt32(integerLiteral: 0x000400)
public let GL_FRONT_RIGHT = UInt32(integerLiteral: 0x000401)
public let GL_FUNC_ADD = UInt32(integerLiteral: 0x00008006)
public let GL_FUNC_REVERSE_SUBTRACT = UInt32(integerLiteral: 0x0000800B)
public let GL_FUNC_SUBTRACT = UInt32(integerLiteral: 0x0000800A)
public let GL_GEOMETRY_INPUT_TYPE = UInt32(integerLiteral: 0x00008917)
public let GL_GEOMETRY_OUTPUT_TYPE = UInt32(integerLiteral: 0x00008918)
public let GL_GEOMETRY_SHADER = UInt32(integerLiteral: 0x00008DD9)
public let GL_GEOMETRY_SHADER_BIT = UInt32(integerLiteral: 0x00004)
public let GL_GEOMETRY_SHADER_INVOCATIONS = UInt32(integerLiteral: 0x0000887F)
public let GL_GEOMETRY_VERTICES_OUT = UInt32(integerLiteral: 0x00008916)
public let GL_GEQUAL = UInt32(integerLiteral: 0x000206)
public let GL_GREATER = UInt32(integerLiteral: 0x000204)
public let GL_GREEN = UInt32(integerLiteral: 0x00001904)
public let GL_GREEN_INTEGER = UInt32(integerLiteral: 0x00008D95)
public let GL_HALF_FLOAT = UInt32(integerLiteral: 0x0000140B)
public let GL_HIGH_FLOAT = UInt32(integerLiteral: 0x00008DF2)
public let GL_HIGH_INT = UInt32(integerLiteral: 0x00008DF5)
public let GL_IMAGE_1D = UInt32(integerLiteral: 0x0000904C)
public let GL_IMAGE_1D_ARRAY = UInt32(integerLiteral: 0x00009052)
public let GL_IMAGE_2D = UInt32(integerLiteral: 0x0000904D)
public let GL_IMAGE_2D_ARRAY = UInt32(integerLiteral: 0x00009053)
public let GL_IMAGE_2D_MULTISAMPLE = UInt32(integerLiteral: 0x00009055)
public let GL_IMAGE_2D_MULTISAMPLE_ARRAY = UInt32(integerLiteral: 0x00009056)
public let GL_IMAGE_2D_RECT = UInt32(integerLiteral: 0x0000904F)
public let GL_IMAGE_3D = UInt32(integerLiteral: 0x0000904E)
public let GL_IMAGE_BINDING_ACCESS = UInt32(integerLiteral: 0x00008F3E)
public let GL_IMAGE_BINDING_FORMAT = UInt32(integerLiteral: 0x0000906E)
public let GL_IMAGE_BINDING_LAYER = UInt32(integerLiteral: 0x00008F3D)
public let GL_IMAGE_BINDING_LAYERED = UInt32(integerLiteral: 0x00008F3C)
public let GL_IMAGE_BINDING_LEVEL = UInt32(integerLiteral: 0x00008F3B)
public let GL_IMAGE_BINDING_NAME = UInt32(integerLiteral: 0x00008F3A)
public let GL_IMAGE_BUFFER = UInt32(integerLiteral: 0x00009051)
public let GL_IMAGE_CUBE = UInt32(integerLiteral: 0x00009050)
public let GL_IMAGE_CUBE_MAP_ARRAY = UInt32(integerLiteral: 0x00009054)
public let GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS = UInt32(integerLiteral: 0x000090C9)
public let GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE = UInt32(integerLiteral: 0x000090C8)
public let GL_IMAGE_FORMAT_COMPATIBILITY_TYPE = UInt32(integerLiteral: 0x000090C7)
public let GL_IMPLEMENTATION_COLOR_READ_FORMAT = UInt32(integerLiteral: 0x00008B9B)
public let GL_IMPLEMENTATION_COLOR_READ_TYPE = UInt32(integerLiteral: 0x00008B9A)
public let GL_INCR = UInt32(integerLiteral: 0x00001E02)
public let GL_INCR_WRAP = UInt32(integerLiteral: 0x00008507)
public let GL_INFO_LOG_LENGTH = UInt32(integerLiteral: 0x00008B84)
public let GL_INT = UInt32(integerLiteral: 0x00001404)
public let GL_INTERLEAVED_ATTRIBS = UInt32(integerLiteral: 0x00008C8C)
public let GL_INT_2_10_10_10_REV = UInt32(integerLiteral: 0x00008D9F)
public let GL_INT_IMAGE_1D = UInt32(integerLiteral: 0x00009057)
public let GL_INT_IMAGE_1D_ARRAY = UInt32(integerLiteral: 0x0000905D)
public let GL_INT_IMAGE_2D = UInt32(integerLiteral: 0x00009058)
public let GL_INT_IMAGE_2D_ARRAY = UInt32(integerLiteral: 0x0000905E)
public let GL_INT_IMAGE_2D_MULTISAMPLE = UInt32(integerLiteral: 0x00009060)
public let GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY = UInt32(integerLiteral: 0x00009061)
public let GL_INT_IMAGE_2D_RECT = UInt32(integerLiteral: 0x0000905A)
public let GL_INT_IMAGE_3D = UInt32(integerLiteral: 0x00009059)
public let GL_INT_IMAGE_BUFFER = UInt32(integerLiteral: 0x0000905C)
public let GL_INT_IMAGE_CUBE = UInt32(integerLiteral: 0x0000905B)
public let GL_INT_IMAGE_CUBE_MAP_ARRAY = UInt32(integerLiteral: 0x0000905F)
public let GL_INT_SAMPLER_1D = UInt32(integerLiteral: 0x00008DC9)
public let GL_INT_SAMPLER_1D_ARRAY = UInt32(integerLiteral: 0x00008DCE)
public let GL_INT_SAMPLER_2D = UInt32(integerLiteral: 0x00008DCA)
public let GL_INT_SAMPLER_2D_ARRAY = UInt32(integerLiteral: 0x00008DCF)
public let GL_INT_SAMPLER_2D_MULTISAMPLE = UInt32(integerLiteral: 0x00009109)
public let GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = UInt32(integerLiteral: 0x0000910C)
public let GL_INT_SAMPLER_2D_RECT = UInt32(integerLiteral: 0x00008DCD)
public let GL_INT_SAMPLER_3D = UInt32(integerLiteral: 0x00008DCB)
public let GL_INT_SAMPLER_BUFFER = UInt32(integerLiteral: 0x00008DD0)
public let GL_INT_SAMPLER_CUBE = UInt32(integerLiteral: 0x00008DCC)
public let GL_INT_SAMPLER_CUBE_MAP_ARRAY = UInt32(integerLiteral: 0x0000900E)
public let GL_INT_VEC2 = UInt32(integerLiteral: 0x00008B53)
public let GL_INT_VEC3 = UInt32(integerLiteral: 0x00008B54)
public let GL_INT_VEC4 = UInt32(integerLiteral: 0x00008B55)
public let GL_INVALID_ENUM = UInt32(integerLiteral: 0x000500)
public let GL_INVALID_FRAMEBUFFER_OPERATION = UInt32(integerLiteral: 0x000506)
public let GL_INVALID_INDEX = UInt32(integerLiteral: 0xFFFFFFFF)
public let GL_INVALID_OPERATION = UInt32(integerLiteral: 0x000502)
public let GL_INVALID_VALUE = UInt32(integerLiteral: 0x000501)
public let GL_INVERT = UInt32(integerLiteral: 0x0000150A)
public let GL_ISOLINES = UInt32(integerLiteral: 0x00008E7A)
public let GL_KEEP = UInt32(integerLiteral: 0x00001E00)
public let GL_LAST_VERTEX_CONVENTION = UInt32(integerLiteral: 0x00008E4E)
public let GL_LAYER_PROVOKING_VERTEX = UInt32(integerLiteral: 0x0000825E)
public let GL_LEFT = UInt32(integerLiteral: 0x000406)
public let GL_LEQUAL = UInt32(integerLiteral: 0x000203)
public let GL_LESS = UInt32(integerLiteral: 0x000201)
public let GL_LINE = UInt32(integerLiteral: 0x00001B01)
public let GL_LINEAR = UInt32(integerLiteral: 0x00002601)
public let GL_LINEAR_MIPMAP_LINEAR = UInt32(integerLiteral: 0x00002703)
public let GL_LINEAR_MIPMAP_NEAREST = UInt32(integerLiteral: 0x00002701)
public let GL_LINES = UInt32(integerLiteral: 0x00001)
public let GL_LINES_ADJACENCY = UInt32(integerLiteral: 0x0000A)
public let GL_LINE_LOOP = UInt32(integerLiteral: 0x00002)
public let GL_LINE_SMOOTH = UInt32(integerLiteral: 0x000B20)
public let GL_LINE_SMOOTH_HINT = UInt32(integerLiteral: 0x000C52)
public let GL_LINE_STRIP = UInt32(integerLiteral: 0x00003)
public let GL_LINE_STRIP_ADJACENCY = UInt32(integerLiteral: 0x0000B)
public let GL_LINE_WIDTH = UInt32(integerLiteral: 0x000B21)
public let GL_LINE_WIDTH_GRANULARITY = UInt32(integerLiteral: 0x000B23)
public let GL_LINE_WIDTH_RANGE = UInt32(integerLiteral: 0x000B22)
public let GL_LINK_STATUS = UInt32(integerLiteral: 0x00008B82)
public let GL_LOGIC_OP_MODE = UInt32(integerLiteral: 0x000BF0)
public let GL_LOWER_LEFT = UInt32(integerLiteral: 0x00008CA1)
public let GL_LOW_FLOAT = UInt32(integerLiteral: 0x00008DF0)
public let GL_LOW_INT = UInt32(integerLiteral: 0x00008DF3)
public let GL_MAJOR_VERSION = UInt32(integerLiteral: 0x0000821B)
public let GL_MAP_FLUSH_EXPLICIT_BIT = UInt32(integerLiteral: 0x000010)
public let GL_MAP_INVALIDATE_BUFFER_BIT = UInt32(integerLiteral: 0x00008)
public let GL_MAP_INVALIDATE_RANGE_BIT = UInt32(integerLiteral: 0x00004)
public let GL_MAP_READ_BIT = UInt32(integerLiteral: 0x00001)
public let GL_MAP_UNSYNCHRONIZED_BIT = UInt32(integerLiteral: 0x000020)
public let GL_MAP_WRITE_BIT = UInt32(integerLiteral: 0x00002)
public let GL_MAX = UInt32(integerLiteral: 0x00008008)
public let GL_MAX_3D_TEXTURE_SIZE = UInt32(integerLiteral: 0x00008073)
public let GL_MAX_ARRAY_TEXTURE_LAYERS = UInt32(integerLiteral: 0x000088FF)
public let GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS = UInt32(integerLiteral: 0x000092DC)
public let GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE = UInt32(integerLiteral: 0x000092D8)
public let GL_MAX_CLIP_DISTANCES = UInt32(integerLiteral: 0x000D32)
public let GL_MAX_COLOR_ATTACHMENTS = UInt32(integerLiteral: 0x00008CDF)
public let GL_MAX_COLOR_TEXTURE_SAMPLES = UInt32(integerLiteral: 0x0000910E)
public let GL_MAX_COMBINED_ATOMIC_COUNTERS = UInt32(integerLiteral: 0x000092D7)
public let GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS = UInt32(integerLiteral: 0x000092D1)
public let GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = UInt32(integerLiteral: 0x00008A33)
public let GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = UInt32(integerLiteral: 0x00008A32)
public let GL_MAX_COMBINED_IMAGE_UNIFORMS = UInt32(integerLiteral: 0x000090CF)
public let GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS = UInt32(integerLiteral: 0x00008F39)
public let GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = UInt32(integerLiteral: 0x00008E1E)
public let GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = UInt32(integerLiteral: 0x00008E1F)
public let GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = UInt32(integerLiteral: 0x00008B4D)
public let GL_MAX_COMBINED_UNIFORM_BLOCKS = UInt32(integerLiteral: 0x00008A2E)
public let GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = UInt32(integerLiteral: 0x00008A31)
public let GL_MAX_CUBE_MAP_TEXTURE_SIZE = UInt32(integerLiteral: 0x0000851C)
public let GL_MAX_DEPTH_TEXTURE_SAMPLES = UInt32(integerLiteral: 0x0000910F)
public let GL_MAX_DRAW_BUFFERS = UInt32(integerLiteral: 0x00008824)
public let GL_MAX_DUAL_SOURCE_DRAW_BUFFERS = UInt32(integerLiteral: 0x000088FC)
public let GL_MAX_ELEMENTS_INDICES = UInt32(integerLiteral: 0x000080E9)
public let GL_MAX_ELEMENTS_VERTICES = UInt32(integerLiteral: 0x000080E8)
public let GL_MAX_FRAGMENT_ATOMIC_COUNTERS = UInt32(integerLiteral: 0x000092D6)
public let GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS = UInt32(integerLiteral: 0x000092D0)
public let GL_MAX_FRAGMENT_IMAGE_UNIFORMS = UInt32(integerLiteral: 0x000090CE)
public let GL_MAX_FRAGMENT_INPUT_COMPONENTS = UInt32(integerLiteral: 0x00009125)
public let GL_MAX_FRAGMENT_INTERPOLATION_OFFSET = UInt32(integerLiteral: 0x00008E5C)
public let GL_MAX_FRAGMENT_UNIFORM_BLOCKS = UInt32(integerLiteral: 0x00008A2D)
public let GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = UInt32(integerLiteral: 0x00008B49)
public let GL_MAX_FRAGMENT_UNIFORM_VECTORS = UInt32(integerLiteral: 0x00008DFD)
public let GL_MAX_GEOMETRY_ATOMIC_COUNTERS = UInt32(integerLiteral: 0x000092D5)
public let GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS = UInt32(integerLiteral: 0x000092CF)
public let GL_MAX_GEOMETRY_IMAGE_UNIFORMS = UInt32(integerLiteral: 0x000090CD)
public let GL_MAX_GEOMETRY_INPUT_COMPONENTS = UInt32(integerLiteral: 0x00009123)
public let GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = UInt32(integerLiteral: 0x00009124)
public let GL_MAX_GEOMETRY_OUTPUT_VERTICES = UInt32(integerLiteral: 0x00008DE0)
public let GL_MAX_GEOMETRY_SHADER_INVOCATIONS = UInt32(integerLiteral: 0x00008E5A)
public let GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = UInt32(integerLiteral: 0x00008C29)
public let GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = UInt32(integerLiteral: 0x00008DE1)
public let GL_MAX_GEOMETRY_UNIFORM_BLOCKS = UInt32(integerLiteral: 0x00008A2C)
public let GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = UInt32(integerLiteral: 0x00008DDF)
public let GL_MAX_IMAGE_SAMPLES = UInt32(integerLiteral: 0x0000906D)
public let GL_MAX_IMAGE_UNITS = UInt32(integerLiteral: 0x00008F38)
public let GL_MAX_INTEGER_SAMPLES = UInt32(integerLiteral: 0x00009110)
public let GL_MAX_PATCH_VERTICES = UInt32(integerLiteral: 0x00008E7D)
public let GL_MAX_PROGRAM_TEXEL_OFFSET = UInt32(integerLiteral: 0x00008905)
public let GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = UInt32(integerLiteral: 0x00008E5F)
public let GL_MAX_RECTANGLE_TEXTURE_SIZE = UInt32(integerLiteral: 0x000084F8)
public let GL_MAX_RENDERBUFFER_SIZE = UInt32(integerLiteral: 0x000084E8)
public let GL_MAX_SAMPLES = UInt32(integerLiteral: 0x00008D57)
public let GL_MAX_SAMPLE_MASK_WORDS = UInt32(integerLiteral: 0x00008E59)
public let GL_MAX_SERVER_WAIT_TIMEOUT = UInt32(integerLiteral: 0x00009111)
public let GL_MAX_SUBROUTINES = UInt32(integerLiteral: 0x00008DE7)
public let GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS = UInt32(integerLiteral: 0x00008DE8)
public let GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS = UInt32(integerLiteral: 0x000092D3)
public let GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS = UInt32(integerLiteral: 0x000092CD)
public let GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS = UInt32(integerLiteral: 0x000090CB)
public let GL_MAX_TESS_CONTROL_INPUT_COMPONENTS = UInt32(integerLiteral: 0x0000886C)
public let GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS = UInt32(integerLiteral: 0x00008E83)
public let GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = UInt32(integerLiteral: 0x00008E81)
public let GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = UInt32(integerLiteral: 0x00008E85)
public let GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS = UInt32(integerLiteral: 0x00008E89)
public let GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS = UInt32(integerLiteral: 0x00008E7F)
public let GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS = UInt32(integerLiteral: 0x000092D4)
public let GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS = UInt32(integerLiteral: 0x000092CE)
public let GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS = UInt32(integerLiteral: 0x000090CC)
public let GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS = UInt32(integerLiteral: 0x0000886D)
public let GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = UInt32(integerLiteral: 0x00008E86)
public let GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = UInt32(integerLiteral: 0x00008E82)
public let GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS = UInt32(integerLiteral: 0x00008E8A)
public let GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = UInt32(integerLiteral: 0x00008E80)
public let GL_MAX_TESS_GEN_LEVEL = UInt32(integerLiteral: 0x00008E7E)
public let GL_MAX_TESS_PATCH_COMPONENTS = UInt32(integerLiteral: 0x00008E84)
public let GL_MAX_TEXTURE_BUFFER_SIZE = UInt32(integerLiteral: 0x00008C2B)
public let GL_MAX_TEXTURE_IMAGE_UNITS = UInt32(integerLiteral: 0x00008872)
public let GL_MAX_TEXTURE_LOD_BIAS = UInt32(integerLiteral: 0x000084FD)
public let GL_MAX_TEXTURE_SIZE = UInt32(integerLiteral: 0x000D33)
public let GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = UInt32(integerLiteral: 0x00008E70)
public let GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = UInt32(integerLiteral: 0x00008C8A)
public let GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = UInt32(integerLiteral: 0x00008C8B)
public let GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = UInt32(integerLiteral: 0x00008C80)
public let GL_MAX_UNIFORM_BLOCK_SIZE = UInt32(integerLiteral: 0x00008A30)
public let GL_MAX_UNIFORM_BUFFER_BINDINGS = UInt32(integerLiteral: 0x00008A2F)
public let GL_MAX_VARYING_COMPONENTS = UInt32(integerLiteral: 0x00008B4B)
public let GL_MAX_VARYING_FLOATS = UInt32(integerLiteral: 0x00008B4B)
public let GL_MAX_VARYING_VECTORS = UInt32(integerLiteral: 0x00008DFC)
public let GL_MAX_VERTEX_ATOMIC_COUNTERS = UInt32(integerLiteral: 0x000092D2)
public let GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS = UInt32(integerLiteral: 0x000092CC)
public let GL_MAX_VERTEX_ATTRIBS = UInt32(integerLiteral: 0x00008869)
public let GL_MAX_VERTEX_IMAGE_UNIFORMS = UInt32(integerLiteral: 0x000090CA)
public let GL_MAX_VERTEX_OUTPUT_COMPONENTS = UInt32(integerLiteral: 0x00009122)
public let GL_MAX_VERTEX_STREAMS = UInt32(integerLiteral: 0x00008E71)
public let GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = UInt32(integerLiteral: 0x00008B4C)
public let GL_MAX_VERTEX_UNIFORM_BLOCKS = UInt32(integerLiteral: 0x00008A2B)
public let GL_MAX_VERTEX_UNIFORM_COMPONENTS = UInt32(integerLiteral: 0x00008B4A)
public let GL_MAX_VERTEX_UNIFORM_VECTORS = UInt32(integerLiteral: 0x00008DFB)
public let GL_MAX_VIEWPORTS = UInt32(integerLiteral: 0x0000825B)
public let GL_MAX_VIEWPORT_DIMS = UInt32(integerLiteral: 0x000D3A)
public let GL_MEDIUM_FLOAT = UInt32(integerLiteral: 0x00008DF1)
public let GL_MEDIUM_INT = UInt32(integerLiteral: 0x00008DF4)
public let GL_MIN = UInt32(integerLiteral: 0x00008007)
public let GL_MINOR_VERSION = UInt32(integerLiteral: 0x0000821C)
public let GL_MIN_FRAGMENT_INTERPOLATION_OFFSET = UInt32(integerLiteral: 0x00008E5B)
public let GL_MIN_MAP_BUFFER_ALIGNMENT = UInt32(integerLiteral: 0x000090BC)
public let GL_MIN_PROGRAM_TEXEL_OFFSET = UInt32(integerLiteral: 0x00008904)
public let GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = UInt32(integerLiteral: 0x00008E5E)
public let GL_MIN_SAMPLE_SHADING_VALUE = UInt32(integerLiteral: 0x00008C37)
public let GL_MIRRORED_REPEAT = UInt32(integerLiteral: 0x00008370)
public let GL_MULTISAMPLE = UInt32(integerLiteral: 0x0000809D)
public let GL_NAND = UInt32(integerLiteral: 0x0000150E)
public let GL_NEAREST = UInt32(integerLiteral: 0x00002600)
public let GL_NEAREST_MIPMAP_LINEAR = UInt32(integerLiteral: 0x00002702)
public let GL_NEAREST_MIPMAP_NEAREST = UInt32(integerLiteral: 0x00002700)
public let GL_NEVER = UInt32(integerLiteral: 0x000200)
public let GL_NICEST = UInt32(integerLiteral: 0x00001102)
public let GL_NONE = UInt32(integerLiteral: 0)
public let GL_NOOP = UInt32(integerLiteral: 0x00001505)
public let GL_NOR = UInt32(integerLiteral: 0x00001508)
public let GL_NOTEQUAL = UInt32(integerLiteral: 0x000205)
public let GL_NO_ERROR = UInt32(integerLiteral: 0)
public let GL_NUM_COMPATIBLE_SUBROUTINES = UInt32(integerLiteral: 0x00008E4A)
public let GL_NUM_COMPRESSED_TEXTURE_FORMATS = UInt32(integerLiteral: 0x000086A2)
public let GL_NUM_EXTENSIONS = UInt32(integerLiteral: 0x0000821D)
public let GL_NUM_PROGRAM_BINARY_FORMATS = UInt32(integerLiteral: 0x000087FE)
public let GL_NUM_SAMPLE_COUNTS = UInt32(integerLiteral: 0x00009380)
public let GL_NUM_SHADER_BINARY_FORMATS = UInt32(integerLiteral: 0x00008DF9)
public let GL_OBJECT_TYPE = UInt32(integerLiteral: 0x00009112)
public let GL_ONE = UInt32(integerLiteral: 1)
public let GL_ONE_MINUS_CONSTANT_ALPHA = UInt32(integerLiteral: 0x00008004)
public let GL_ONE_MINUS_CONSTANT_COLOR = UInt32(integerLiteral: 0x00008002)
public let GL_ONE_MINUS_DST_ALPHA = UInt32(integerLiteral: 0x000305)
public let GL_ONE_MINUS_DST_COLOR = UInt32(integerLiteral: 0x000307)
public let GL_ONE_MINUS_SRC1_ALPHA = UInt32(integerLiteral: 0x000088FB)
public let GL_ONE_MINUS_SRC1_COLOR = UInt32(integerLiteral: 0x000088FA)
public let GL_ONE_MINUS_SRC_ALPHA = UInt32(integerLiteral: 0x000303)
public let GL_ONE_MINUS_SRC_COLOR = UInt32(integerLiteral: 0x000301)
public let GL_OR = UInt32(integerLiteral: 0x00001507)
public let GL_OR_INVERTED = UInt32(integerLiteral: 0x0000150D)
public let GL_OR_REVERSE = UInt32(integerLiteral: 0x0000150B)
public let GL_OUT_OF_MEMORY = UInt32(integerLiteral: 0x000505)
public let GL_PACK_ALIGNMENT = UInt32(integerLiteral: 0x000D05)
public let GL_PACK_COMPRESSED_BLOCK_DEPTH = UInt32(integerLiteral: 0x0000912D)
public let GL_PACK_COMPRESSED_BLOCK_HEIGHT = UInt32(integerLiteral: 0x0000912C)
public let GL_PACK_COMPRESSED_BLOCK_SIZE = UInt32(integerLiteral: 0x0000912E)
public let GL_PACK_COMPRESSED_BLOCK_WIDTH = UInt32(integerLiteral: 0x0000912B)
public let GL_PACK_IMAGE_HEIGHT = UInt32(integerLiteral: 0x0000806C)
public let GL_PACK_LSB_FIRST = UInt32(integerLiteral: 0x000D01)
public let GL_PACK_ROW_LENGTH = UInt32(integerLiteral: 0x000D02)
public let GL_PACK_SKIP_IMAGES = UInt32(integerLiteral: 0x0000806B)
public let GL_PACK_SKIP_PIXELS = UInt32(integerLiteral: 0x000D04)
public let GL_PACK_SKIP_ROWS = UInt32(integerLiteral: 0x000D03)
public let GL_PACK_SWAP_BYTES = UInt32(integerLiteral: 0x000D00)
public let GL_PATCHES = UInt32(integerLiteral: 0x0000E)
public let GL_PATCH_DEFAULT_INNER_LEVEL = UInt32(integerLiteral: 0x00008E73)
public let GL_PATCH_DEFAULT_OUTER_LEVEL = UInt32(integerLiteral: 0x00008E74)
public let GL_PATCH_VERTICES = UInt32(integerLiteral: 0x00008E72)
public let GL_PIXEL_BUFFER_BARRIER_BIT = UInt32(integerLiteral: 0x000080)
public let GL_PIXEL_PACK_BUFFER = UInt32(integerLiteral: 0x000088EB)
public let GL_PIXEL_PACK_BUFFER_BINDING = UInt32(integerLiteral: 0x000088ED)
public let GL_PIXEL_UNPACK_BUFFER = UInt32(integerLiteral: 0x000088EC)
public let GL_PIXEL_UNPACK_BUFFER_BINDING = UInt32(integerLiteral: 0x000088EF)
public let GL_POINT = UInt32(integerLiteral: 0x00001B00)
public let GL_POINTS = UInt32(integerLiteral: 0x00000)
public let GL_POINT_FADE_THRESHOLD_SIZE = UInt32(integerLiteral: 0x00008128)
public let GL_POINT_SIZE = UInt32(integerLiteral: 0x000B11)
public let GL_POINT_SIZE_GRANULARITY = UInt32(integerLiteral: 0x000B13)
public let GL_POINT_SIZE_RANGE = UInt32(integerLiteral: 0x000B12)
public let GL_POINT_SPRITE_COORD_ORIGIN = UInt32(integerLiteral: 0x00008CA0)
public let GL_POLYGON_MODE = UInt32(integerLiteral: 0x000B40)
public let GL_POLYGON_OFFSET_FACTOR = UInt32(integerLiteral: 0x00008038)
public let GL_POLYGON_OFFSET_FILL = UInt32(integerLiteral: 0x00008037)
public let GL_POLYGON_OFFSET_LINE = UInt32(integerLiteral: 0x00002A02)
public let GL_POLYGON_OFFSET_POINT = UInt32(integerLiteral: 0x00002A01)
public let GL_POLYGON_OFFSET_UNITS = UInt32(integerLiteral: 0x00002A00)
public let GL_POLYGON_SMOOTH = UInt32(integerLiteral: 0x000B41)
public let GL_POLYGON_SMOOTH_HINT = UInt32(integerLiteral: 0x000C53)
public let GL_PRIMITIVES_GENERATED = UInt32(integerLiteral: 0x00008C87)
public let GL_PRIMITIVE_RESTART = UInt32(integerLiteral: 0x00008F9D)
public let GL_PRIMITIVE_RESTART_INDEX = UInt32(integerLiteral: 0x00008F9E)
public let GL_PROGRAM_BINARY_FORMATS = UInt32(integerLiteral: 0x000087FF)
public let GL_PROGRAM_BINARY_LENGTH = UInt32(integerLiteral: 0x00008741)
public let GL_PROGRAM_BINARY_RETRIEVABLE_HINT = UInt32(integerLiteral: 0x00008257)
public let GL_PROGRAM_PIPELINE_BINDING = UInt32(integerLiteral: 0x0000825A)
public let GL_PROGRAM_POINT_SIZE = UInt32(integerLiteral: 0x00008642)
public let GL_PROGRAM_SEPARABLE = UInt32(integerLiteral: 0x00008258)
public let GL_PROVOKING_VERTEX = UInt32(integerLiteral: 0x00008E4F)
public let GL_PROXY_TEXTURE_1D = UInt32(integerLiteral: 0x00008063)
public let GL_PROXY_TEXTURE_1D_ARRAY = UInt32(integerLiteral: 0x00008C19)
public let GL_PROXY_TEXTURE_2D = UInt32(integerLiteral: 0x00008064)
public let GL_PROXY_TEXTURE_2D_ARRAY = UInt32(integerLiteral: 0x00008C1B)
public let GL_PROXY_TEXTURE_2D_MULTISAMPLE = UInt32(integerLiteral: 0x00009101)
public let GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = UInt32(integerLiteral: 0x00009103)
public let GL_PROXY_TEXTURE_3D = UInt32(integerLiteral: 0x00008070)
public let GL_PROXY_TEXTURE_CUBE_MAP = UInt32(integerLiteral: 0x0000851B)
public let GL_PROXY_TEXTURE_CUBE_MAP_ARRAY = UInt32(integerLiteral: 0x0000900B)
public let GL_PROXY_TEXTURE_RECTANGLE = UInt32(integerLiteral: 0x000084F7)
public let GL_QUADS = UInt32(integerLiteral: 0x00007)
public let GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = UInt32(integerLiteral: 0x00008E4C)
public let GL_QUERY_BY_REGION_NO_WAIT = UInt32(integerLiteral: 0x00008E16)
public let GL_QUERY_BY_REGION_WAIT = UInt32(integerLiteral: 0x00008E15)
public let GL_QUERY_COUNTER_BITS = UInt32(integerLiteral: 0x00008864)
public let GL_QUERY_NO_WAIT = UInt32(integerLiteral: 0x00008E14)
public let GL_QUERY_RESULT = UInt32(integerLiteral: 0x00008866)
public let GL_QUERY_RESULT_AVAILABLE = UInt32(integerLiteral: 0x00008867)
public let GL_QUERY_WAIT = UInt32(integerLiteral: 0x00008E13)
public let GL_R11F_G11F_B10F = UInt32(integerLiteral: 0x00008C3A)
public let GL_R16 = UInt32(integerLiteral: 0x0000822A)
public let GL_R16F = UInt32(integerLiteral: 0x0000822D)
public let GL_R16I = UInt32(integerLiteral: 0x00008233)
public let GL_R16UI = UInt32(integerLiteral: 0x00008234)
public let GL_R16_SNORM = UInt32(integerLiteral: 0x00008F98)
public let GL_R32F = UInt32(integerLiteral: 0x0000822E)
public let GL_R32I = UInt32(integerLiteral: 0x00008235)
public let GL_R32UI = UInt32(integerLiteral: 0x00008236)
public let GL_R3_G3_B2 = UInt32(integerLiteral: 0x00002A10)
public let GL_R8 = UInt32(integerLiteral: 0x00008229)
public let GL_R8I = UInt32(integerLiteral: 0x00008231)
public let GL_R8UI = UInt32(integerLiteral: 0x00008232)
public let GL_R8_SNORM = UInt32(integerLiteral: 0x00008F94)
public let GL_RASTERIZER_DISCARD = UInt32(integerLiteral: 0x00008C89)
public let GL_READ_BUFFER = UInt32(integerLiteral: 0x000C02)
public let GL_READ_FRAMEBUFFER = UInt32(integerLiteral: 0x00008CA8)
public let GL_READ_FRAMEBUFFER_BINDING = UInt32(integerLiteral: 0x00008CAA)
public let GL_READ_ONLY = UInt32(integerLiteral: 0x000088B8)
public let GL_READ_WRITE = UInt32(integerLiteral: 0x000088BA)
public let GL_RED = UInt32(integerLiteral: 0x00001903)
public let GL_RED_INTEGER = UInt32(integerLiteral: 0x00008D94)
public let GL_RENDERBUFFER = UInt32(integerLiteral: 0x00008D41)
public let GL_RENDERBUFFER_ALPHA_SIZE = UInt32(integerLiteral: 0x00008D53)
public let GL_RENDERBUFFER_BINDING = UInt32(integerLiteral: 0x00008CA7)
public let GL_RENDERBUFFER_BLUE_SIZE = UInt32(integerLiteral: 0x00008D52)
public let GL_RENDERBUFFER_DEPTH_SIZE = UInt32(integerLiteral: 0x00008D54)
public let GL_RENDERBUFFER_GREEN_SIZE = UInt32(integerLiteral: 0x00008D51)
public let GL_RENDERBUFFER_HEIGHT = UInt32(integerLiteral: 0x00008D43)
public let GL_RENDERBUFFER_INTERNAL_FORMAT = UInt32(integerLiteral: 0x00008D44)
public let GL_RENDERBUFFER_RED_SIZE = UInt32(integerLiteral: 0x00008D50)
public let GL_RENDERBUFFER_SAMPLES = UInt32(integerLiteral: 0x00008CAB)
public let GL_RENDERBUFFER_STENCIL_SIZE = UInt32(integerLiteral: 0x00008D55)
public let GL_RENDERBUFFER_WIDTH = UInt32(integerLiteral: 0x00008D42)
public let GL_RENDERER = UInt32(integerLiteral: 0x00001F01)
public let GL_REPEAT = UInt32(integerLiteral: 0x00002901)
public let GL_REPLACE = UInt32(integerLiteral: 0x00001E01)
public let GL_RG = UInt32(integerLiteral: 0x00008227)
public let GL_RG16 = UInt32(integerLiteral: 0x0000822C)
public let GL_RG16F = UInt32(integerLiteral: 0x0000822F)
public let GL_RG16I = UInt32(integerLiteral: 0x00008239)
public let GL_RG16UI = UInt32(integerLiteral: 0x0000823A)
public let GL_RG16_SNORM = UInt32(integerLiteral: 0x00008F99)
public let GL_RG32F = UInt32(integerLiteral: 0x00008230)
public let GL_RG32I = UInt32(integerLiteral: 0x0000823B)
public let GL_RG32UI = UInt32(integerLiteral: 0x0000823C)
public let GL_RG8 = UInt32(integerLiteral: 0x0000822B)
public let GL_RG8I = UInt32(integerLiteral: 0x00008237)
public let GL_RG8UI = UInt32(integerLiteral: 0x00008238)
public let GL_RG8_SNORM = UInt32(integerLiteral: 0x00008F95)
public let GL_RGB = UInt32(integerLiteral: 0x00001907)
public let GL_RGB10 = UInt32(integerLiteral: 0x00008052)
public let GL_RGB10_A2 = UInt32(integerLiteral: 0x00008059)
public let GL_RGB10_A2UI = UInt32(integerLiteral: 0x0000906F)
public let GL_RGB12 = UInt32(integerLiteral: 0x00008053)
public let GL_RGB16 = UInt32(integerLiteral: 0x00008054)
public let GL_RGB16F = UInt32(integerLiteral: 0x0000881B)
public let GL_RGB16I = UInt32(integerLiteral: 0x00008D89)
public let GL_RGB16UI = UInt32(integerLiteral: 0x00008D77)
public let GL_RGB16_SNORM = UInt32(integerLiteral: 0x00008F9A)
public let GL_RGB32F = UInt32(integerLiteral: 0x00008815)
public let GL_RGB32I = UInt32(integerLiteral: 0x00008D83)
public let GL_RGB32UI = UInt32(integerLiteral: 0x00008D71)
public let GL_RGB4 = UInt32(integerLiteral: 0x0000804F)
public let GL_RGB5 = UInt32(integerLiteral: 0x00008050)
public let GL_RGB565 = UInt32(integerLiteral: 0x00008D62)
public let GL_RGB5_A1 = UInt32(integerLiteral: 0x00008057)
public let GL_RGB8 = UInt32(integerLiteral: 0x00008051)
public let GL_RGB8I = UInt32(integerLiteral: 0x00008D8F)
public let GL_RGB8UI = UInt32(integerLiteral: 0x00008D7D)
public let GL_RGB8_SNORM = UInt32(integerLiteral: 0x00008F96)
public let GL_RGB9_E5 = UInt32(integerLiteral: 0x00008C3D)
public let GL_RGBA = UInt32(integerLiteral: 0x00001908)
public let GL_RGBA12 = UInt32(integerLiteral: 0x0000805A)
public let GL_RGBA16 = UInt32(integerLiteral: 0x0000805B)
public let GL_RGBA16F = UInt32(integerLiteral: 0x0000881A)
public let GL_RGBA16I = UInt32(integerLiteral: 0x00008D88)
public let GL_RGBA16UI = UInt32(integerLiteral: 0x00008D76)
public let GL_RGBA16_SNORM = UInt32(integerLiteral: 0x00008F9B)
public let GL_RGBA2 = UInt32(integerLiteral: 0x00008055)
public let GL_RGBA32F = UInt32(integerLiteral: 0x00008814)
public let GL_RGBA32I = UInt32(integerLiteral: 0x00008D82)
public let GL_RGBA32UI = UInt32(integerLiteral: 0x00008D70)
public let GL_RGBA4 = UInt32(integerLiteral: 0x00008056)
public let GL_RGBA8 = UInt32(integerLiteral: 0x00008058)
public let GL_RGBA8I = UInt32(integerLiteral: 0x00008D8E)
public let GL_RGBA8UI = UInt32(integerLiteral: 0x00008D7C)
public let GL_RGBA8_SNORM = UInt32(integerLiteral: 0x00008F97)
public let GL_RGBA_INTEGER = UInt32(integerLiteral: 0x00008D99)
public let GL_RGB_INTEGER = UInt32(integerLiteral: 0x00008D98)
public let GL_RG_INTEGER = UInt32(integerLiteral: 0x00008228)
public let GL_RIGHT = UInt32(integerLiteral: 0x000407)
public let GL_SAMPLER_1D = UInt32(integerLiteral: 0x00008B5D)
public let GL_SAMPLER_1D_ARRAY = UInt32(integerLiteral: 0x00008DC0)
public let GL_SAMPLER_1D_ARRAY_SHADOW = UInt32(integerLiteral: 0x00008DC3)
public let GL_SAMPLER_1D_SHADOW = UInt32(integerLiteral: 0x00008B61)
public let GL_SAMPLER_2D = UInt32(integerLiteral: 0x00008B5E)
public let GL_SAMPLER_2D_ARRAY = UInt32(integerLiteral: 0x00008DC1)
public let GL_SAMPLER_2D_ARRAY_SHADOW = UInt32(integerLiteral: 0x00008DC4)
public let GL_SAMPLER_2D_MULTISAMPLE = UInt32(integerLiteral: 0x00009108)
public let GL_SAMPLER_2D_MULTISAMPLE_ARRAY = UInt32(integerLiteral: 0x0000910B)
public let GL_SAMPLER_2D_RECT = UInt32(integerLiteral: 0x00008B63)
public let GL_SAMPLER_2D_RECT_SHADOW = UInt32(integerLiteral: 0x00008B64)
public let GL_SAMPLER_2D_SHADOW = UInt32(integerLiteral: 0x00008B62)
public let GL_SAMPLER_3D = UInt32(integerLiteral: 0x00008B5F)
public let GL_SAMPLER_BINDING = UInt32(integerLiteral: 0x00008919)
public let GL_SAMPLER_BUFFER = UInt32(integerLiteral: 0x00008DC2)
public let GL_SAMPLER_CUBE = UInt32(integerLiteral: 0x00008B60)
public let GL_SAMPLER_CUBE_MAP_ARRAY = UInt32(integerLiteral: 0x0000900C)
public let GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW = UInt32(integerLiteral: 0x0000900D)
public let GL_SAMPLER_CUBE_SHADOW = UInt32(integerLiteral: 0x00008DC5)
public let GL_SAMPLES = UInt32(integerLiteral: 0x000080A9)
public let GL_SAMPLES_PASSED = UInt32(integerLiteral: 0x00008914)
public let GL_SAMPLE_ALPHA_TO_COVERAGE = UInt32(integerLiteral: 0x0000809E)
public let GL_SAMPLE_ALPHA_TO_ONE = UInt32(integerLiteral: 0x0000809F)
public let GL_SAMPLE_BUFFERS = UInt32(integerLiteral: 0x000080A8)
public let GL_SAMPLE_COVERAGE = UInt32(integerLiteral: 0x000080A0)
public let GL_SAMPLE_COVERAGE_INVERT = UInt32(integerLiteral: 0x000080AB)
public let GL_SAMPLE_COVERAGE_VALUE = UInt32(integerLiteral: 0x000080AA)
public let GL_SAMPLE_MASK = UInt32(integerLiteral: 0x00008E51)
public let GL_SAMPLE_MASK_VALUE = UInt32(integerLiteral: 0x00008E52)
public let GL_SAMPLE_POSITION = UInt32(integerLiteral: 0x00008E50)
public let GL_SAMPLE_SHADING = UInt32(integerLiteral: 0x00008C36)
public let GL_SCISSOR_BOX = UInt32(integerLiteral: 0x000C10)
public let GL_SCISSOR_TEST = UInt32(integerLiteral: 0x000C11)
public let GL_SEPARATE_ATTRIBS = UInt32(integerLiteral: 0x00008C8D)
public let GL_SET = UInt32(integerLiteral: 0x0000150F)
public let GL_SHADER_BINARY_FORMATS = UInt32(integerLiteral: 0x00008DF8)
public let GL_SHADER_COMPILER = UInt32(integerLiteral: 0x00008DFA)
public let GL_SHADER_IMAGE_ACCESS_BARRIER_BIT = UInt32(integerLiteral: 0x000020)
public let GL_SHADER_SOURCE_LENGTH = UInt32(integerLiteral: 0x00008B88)
public let GL_SHADER_TYPE = UInt32(integerLiteral: 0x00008B4F)
public let GL_SHADING_LANGUAGE_VERSION = UInt32(integerLiteral: 0x00008B8C)
public let GL_SHORT = UInt32(integerLiteral: 0x00001402)
public let GL_SIGNALED = UInt32(integerLiteral: 0x00009119)
public let GL_SIGNED_NORMALIZED = UInt32(integerLiteral: 0x00008F9C)
public let GL_SMOOTH_LINE_WIDTH_GRANULARITY = UInt32(integerLiteral: 0x000B23)
public let GL_SMOOTH_LINE_WIDTH_RANGE = UInt32(integerLiteral: 0x000B22)
public let GL_SMOOTH_POINT_SIZE_GRANULARITY = UInt32(integerLiteral: 0x000B13)
public let GL_SMOOTH_POINT_SIZE_RANGE = UInt32(integerLiteral: 0x000B12)
public let GL_SRC1_ALPHA = UInt32(integerLiteral: 0x00008589)
public let GL_SRC1_COLOR = UInt32(integerLiteral: 0x000088F9)
public let GL_SRC_ALPHA = UInt32(integerLiteral: 0x000302)
public let GL_SRC_ALPHA_SATURATE = UInt32(integerLiteral: 0x000308)
public let GL_SRC_COLOR = UInt32(integerLiteral: 0x000300)
public let GL_SRGB = UInt32(integerLiteral: 0x00008C40)
public let GL_SRGB8 = UInt32(integerLiteral: 0x00008C41)
public let GL_SRGB8_ALPHA8 = UInt32(integerLiteral: 0x00008C43)
public let GL_SRGB_ALPHA = UInt32(integerLiteral: 0x00008C42)
public let GL_STATIC_COPY = UInt32(integerLiteral: 0x000088E6)
public let GL_STATIC_DRAW = UInt32(integerLiteral: 0x000088E4)
public let GL_STATIC_READ = UInt32(integerLiteral: 0x000088E5)
public let GL_STENCIL = UInt32(integerLiteral: 0x00001802)
public let GL_STENCIL_ATTACHMENT = UInt32(integerLiteral: 0x00008D20)
public let GL_STENCIL_BACK_FAIL = UInt32(integerLiteral: 0x00008801)
public let GL_STENCIL_BACK_FUNC = UInt32(integerLiteral: 0x00008800)
public let GL_STENCIL_BACK_PASS_DEPTH_FAIL = UInt32(integerLiteral: 0x00008802)
public let GL_STENCIL_BACK_PASS_DEPTH_PASS = UInt32(integerLiteral: 0x00008803)
public let GL_STENCIL_BACK_REF = UInt32(integerLiteral: 0x00008CA3)
public let GL_STENCIL_BACK_VALUE_MASK = UInt32(integerLiteral: 0x00008CA4)
public let GL_STENCIL_BACK_WRITEMASK = UInt32(integerLiteral: 0x00008CA5)
public let GL_STENCIL_BUFFER_BIT = UInt32(integerLiteral: 0x000400)
public let GL_STENCIL_CLEAR_VALUE = UInt32(integerLiteral: 0x000B91)
public let GL_STENCIL_FAIL = UInt32(integerLiteral: 0x000B94)
public let GL_STENCIL_FUNC = UInt32(integerLiteral: 0x000B92)
public let GL_STENCIL_INDEX = UInt32(integerLiteral: 0x00001901)
public let GL_STENCIL_INDEX1 = UInt32(integerLiteral: 0x00008D46)
public let GL_STENCIL_INDEX16 = UInt32(integerLiteral: 0x00008D49)
public let GL_STENCIL_INDEX4 = UInt32(integerLiteral: 0x00008D47)
public let GL_STENCIL_INDEX8 = UInt32(integerLiteral: 0x00008D48)
public let GL_STENCIL_PASS_DEPTH_FAIL = UInt32(integerLiteral: 0x000B95)
public let GL_STENCIL_PASS_DEPTH_PASS = UInt32(integerLiteral: 0x000B96)
public let GL_STENCIL_REF = UInt32(integerLiteral: 0x000B97)
public let GL_STENCIL_TEST = UInt32(integerLiteral: 0x000B90)
public let GL_STENCIL_VALUE_MASK = UInt32(integerLiteral: 0x000B93)
public let GL_STENCIL_WRITEMASK = UInt32(integerLiteral: 0x000B98)
public let GL_STEREO = UInt32(integerLiteral: 0x000C33)
public let GL_STREAM_COPY = UInt32(integerLiteral: 0x000088E2)
public let GL_STREAM_DRAW = UInt32(integerLiteral: 0x000088E0)
public let GL_STREAM_READ = UInt32(integerLiteral: 0x000088E1)
public let GL_SUBPIXEL_BITS = UInt32(integerLiteral: 0x000D50)
public let GL_SYNC_CONDITION = UInt32(integerLiteral: 0x00009113)
public let GL_SYNC_FENCE = UInt32(integerLiteral: 0x00009116)
public let GL_SYNC_FLAGS = UInt32(integerLiteral: 0x00009115)
public let GL_SYNC_FLUSH_COMMANDS_BIT = UInt32(integerLiteral: 0x00001)
public let GL_SYNC_GPU_COMMANDS_COMPLETE = UInt32(integerLiteral: 0x00009117)
public let GL_SYNC_STATUS = UInt32(integerLiteral: 0x00009114)
public let GL_TESS_CONTROL_OUTPUT_VERTICES = UInt32(integerLiteral: 0x00008E75)
public let GL_TESS_CONTROL_SHADER = UInt32(integerLiteral: 0x00008E88)
public let GL_TESS_CONTROL_SHADER_BIT = UInt32(integerLiteral: 0x00008)
public let GL_TESS_EVALUATION_SHADER = UInt32(integerLiteral: 0x00008E87)
public let GL_TESS_EVALUATION_SHADER_BIT = UInt32(integerLiteral: 0x000010)
public let GL_TESS_GEN_MODE = UInt32(integerLiteral: 0x00008E76)
public let GL_TESS_GEN_POINT_MODE = UInt32(integerLiteral: 0x00008E79)
public let GL_TESS_GEN_SPACING = UInt32(integerLiteral: 0x00008E77)
public let GL_TESS_GEN_VERTEX_ORDER = UInt32(integerLiteral: 0x00008E78)
public let GL_TEXTURE = UInt32(integerLiteral: 0x00001702)
public let GL_TEXTURE0 = UInt32(integerLiteral: 0x000084C0)
public let GL_TEXTURE1 = UInt32(integerLiteral: 0x000084C1)
public let GL_TEXTURE10 = UInt32(integerLiteral: 0x000084CA)
public let GL_TEXTURE11 = UInt32(integerLiteral: 0x000084CB)
public let GL_TEXTURE12 = UInt32(integerLiteral: 0x000084CC)
public let GL_TEXTURE13 = UInt32(integerLiteral: 0x000084CD)
public let GL_TEXTURE14 = UInt32(integerLiteral: 0x000084CE)
public let GL_TEXTURE15 = UInt32(integerLiteral: 0x000084CF)
public let GL_TEXTURE16 = UInt32(integerLiteral: 0x000084D0)
public let GL_TEXTURE17 = UInt32(integerLiteral: 0x000084D1)
public let GL_TEXTURE18 = UInt32(integerLiteral: 0x000084D2)
public let GL_TEXTURE19 = UInt32(integerLiteral: 0x000084D3)
public let GL_TEXTURE2 = UInt32(integerLiteral: 0x000084C2)
public let GL_TEXTURE20 = UInt32(integerLiteral: 0x000084D4)
public let GL_TEXTURE21 = UInt32(integerLiteral: 0x000084D5)
public let GL_TEXTURE22 = UInt32(integerLiteral: 0x000084D6)
public let GL_TEXTURE23 = UInt32(integerLiteral: 0x000084D7)
public let GL_TEXTURE24 = UInt32(integerLiteral: 0x000084D8)
public let GL_TEXTURE25 = UInt32(integerLiteral: 0x000084D9)
public let GL_TEXTURE26 = UInt32(integerLiteral: 0x000084DA)
public let GL_TEXTURE27 = UInt32(integerLiteral: 0x000084DB)
public let GL_TEXTURE28 = UInt32(integerLiteral: 0x000084DC)
public let GL_TEXTURE29 = UInt32(integerLiteral: 0x000084DD)
public let GL_TEXTURE3 = UInt32(integerLiteral: 0x000084C3)
public let GL_TEXTURE30 = UInt32(integerLiteral: 0x000084DE)
public let GL_TEXTURE31 = UInt32(integerLiteral: 0x000084DF)
public let GL_TEXTURE4 = UInt32(integerLiteral: 0x000084C4)
public let GL_TEXTURE5 = UInt32(integerLiteral: 0x000084C5)
public let GL_TEXTURE6 = UInt32(integerLiteral: 0x000084C6)
public let GL_TEXTURE7 = UInt32(integerLiteral: 0x000084C7)
public let GL_TEXTURE8 = UInt32(integerLiteral: 0x000084C8)
public let GL_TEXTURE9 = UInt32(integerLiteral: 0x000084C9)
public let GL_TEXTURE_1D = UInt32(integerLiteral: 0x000DE0)
public let GL_TEXTURE_1D_ARRAY = UInt32(integerLiteral: 0x00008C18)
public let GL_TEXTURE_2D = UInt32(integerLiteral: 0x000DE1)
public let GL_TEXTURE_2D_ARRAY = UInt32(integerLiteral: 0x00008C1A)
public let GL_TEXTURE_2D_MULTISAMPLE = UInt32(integerLiteral: 0x00009100)
public let GL_TEXTURE_2D_MULTISAMPLE_ARRAY = UInt32(integerLiteral: 0x00009102)
public let GL_TEXTURE_3D = UInt32(integerLiteral: 0x0000806F)
public let GL_TEXTURE_ALPHA_SIZE = UInt32(integerLiteral: 0x0000805F)
public let GL_TEXTURE_ALPHA_TYPE = UInt32(integerLiteral: 0x00008C13)
public let GL_TEXTURE_BASE_LEVEL = UInt32(integerLiteral: 0x0000813C)
public let GL_TEXTURE_BINDING_1D = UInt32(integerLiteral: 0x00008068)
public let GL_TEXTURE_BINDING_1D_ARRAY = UInt32(integerLiteral: 0x00008C1C)
public let GL_TEXTURE_BINDING_2D = UInt32(integerLiteral: 0x00008069)
public let GL_TEXTURE_BINDING_2D_ARRAY = UInt32(integerLiteral: 0x00008C1D)
public let GL_TEXTURE_BINDING_2D_MULTISAMPLE = UInt32(integerLiteral: 0x00009104)
public let GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = UInt32(integerLiteral: 0x00009105)
public let GL_TEXTURE_BINDING_3D = UInt32(integerLiteral: 0x0000806A)
public let GL_TEXTURE_BINDING_BUFFER = UInt32(integerLiteral: 0x00008C2C)
public let GL_TEXTURE_BINDING_CUBE_MAP = UInt32(integerLiteral: 0x00008514)
public let GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = UInt32(integerLiteral: 0x0000900A)
public let GL_TEXTURE_BINDING_RECTANGLE = UInt32(integerLiteral: 0x000084F6)
public let GL_TEXTURE_BLUE_SIZE = UInt32(integerLiteral: 0x0000805E)
public let GL_TEXTURE_BLUE_TYPE = UInt32(integerLiteral: 0x00008C12)
public let GL_TEXTURE_BORDER_COLOR = UInt32(integerLiteral: 0x00001004)
public let GL_TEXTURE_BUFFER = UInt32(integerLiteral: 0x00008C2A)
public let GL_TEXTURE_BUFFER_DATA_STORE_BINDING = UInt32(integerLiteral: 0x00008C2D)
public let GL_TEXTURE_COMPARE_FUNC = UInt32(integerLiteral: 0x0000884D)
public let GL_TEXTURE_COMPARE_MODE = UInt32(integerLiteral: 0x0000884C)
public let GL_TEXTURE_COMPRESSED = UInt32(integerLiteral: 0x000086A1)
public let GL_TEXTURE_COMPRESSED_IMAGE_SIZE = UInt32(integerLiteral: 0x000086A0)
public let GL_TEXTURE_COMPRESSION_HINT = UInt32(integerLiteral: 0x000084EF)
public let GL_TEXTURE_CUBE_MAP = UInt32(integerLiteral: 0x00008513)
public let GL_TEXTURE_CUBE_MAP_ARRAY = UInt32(integerLiteral: 0x00009009)
public let GL_TEXTURE_CUBE_MAP_NEGATIVE_X = UInt32(integerLiteral: 0x00008516)
public let GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = UInt32(integerLiteral: 0x00008518)
public let GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = UInt32(integerLiteral: 0x0000851A)
public let GL_TEXTURE_CUBE_MAP_POSITIVE_X = UInt32(integerLiteral: 0x00008515)
public let GL_TEXTURE_CUBE_MAP_POSITIVE_Y = UInt32(integerLiteral: 0x00008517)
public let GL_TEXTURE_CUBE_MAP_POSITIVE_Z = UInt32(integerLiteral: 0x00008519)
public let GL_TEXTURE_CUBE_MAP_SEAMLESS = UInt32(integerLiteral: 0x0000884F)
public let GL_TEXTURE_DEPTH = UInt32(integerLiteral: 0x00008071)
public let GL_TEXTURE_DEPTH_SIZE = UInt32(integerLiteral: 0x0000884A)
public let GL_TEXTURE_DEPTH_TYPE = UInt32(integerLiteral: 0x00008C16)
public let GL_TEXTURE_FETCH_BARRIER_BIT = UInt32(integerLiteral: 0x00008)
public let GL_TEXTURE_FIXED_SAMPLE_LOCATIONS = UInt32(integerLiteral: 0x00009107)
public let GL_TEXTURE_GREEN_SIZE = UInt32(integerLiteral: 0x0000805D)
public let GL_TEXTURE_GREEN_TYPE = UInt32(integerLiteral: 0x00008C11)
public let GL_TEXTURE_HEIGHT = UInt32(integerLiteral: 0x00001001)
public let GL_TEXTURE_IMMUTABLE_FORMAT = UInt32(integerLiteral: 0x0000912F)
public let GL_TEXTURE_INTERNAL_FORMAT = UInt32(integerLiteral: 0x00001003)
public let GL_TEXTURE_LOD_BIAS = UInt32(integerLiteral: 0x00008501)
public let GL_TEXTURE_MAG_FILTER = UInt32(integerLiteral: 0x00002800)
public let GL_TEXTURE_MAX_LEVEL = UInt32(integerLiteral: 0x0000813D)
public let GL_TEXTURE_MAX_LOD = UInt32(integerLiteral: 0x0000813B)
public let GL_TEXTURE_MIN_FILTER = UInt32(integerLiteral: 0x00002801)
public let GL_TEXTURE_MIN_LOD = UInt32(integerLiteral: 0x0000813A)
public let GL_TEXTURE_RECTANGLE = UInt32(integerLiteral: 0x000084F5)
public let GL_TEXTURE_RED_SIZE = UInt32(integerLiteral: 0x0000805C)
public let GL_TEXTURE_RED_TYPE = UInt32(integerLiteral: 0x00008C10)
public let GL_TEXTURE_SAMPLES = UInt32(integerLiteral: 0x00009106)
public let GL_TEXTURE_SHARED_SIZE = UInt32(integerLiteral: 0x00008C3F)
public let GL_TEXTURE_STENCIL_SIZE = UInt32(integerLiteral: 0x000088F1)
public let GL_TEXTURE_SWIZZLE_A = UInt32(integerLiteral: 0x00008E45)
public let GL_TEXTURE_SWIZZLE_B = UInt32(integerLiteral: 0x00008E44)
public let GL_TEXTURE_SWIZZLE_G = UInt32(integerLiteral: 0x00008E43)
public let GL_TEXTURE_SWIZZLE_R = UInt32(integerLiteral: 0x00008E42)
public let GL_TEXTURE_SWIZZLE_RGBA = UInt32(integerLiteral: 0x00008E46)
public let GL_TEXTURE_UPDATE_BARRIER_BIT = UInt32(integerLiteral: 0x000100)
public let GL_TEXTURE_WIDTH = UInt32(integerLiteral: 0x00001000)
public let GL_TEXTURE_WRAP_R = UInt32(integerLiteral: 0x00008072)
public let GL_TEXTURE_WRAP_S = UInt32(integerLiteral: 0x00002802)
public let GL_TEXTURE_WRAP_T = UInt32(integerLiteral: 0x00002803)
public let GL_TIMEOUT_EXPIRED = UInt32(integerLiteral: 0x0000911B)
public let GL_TIMEOUT_IGNORED = UInt64(integerLiteral: 0xFFFFFFFFFFFFFFFF)
public let GL_TIMESTAMP = UInt32(integerLiteral: 0x00008E28)
public let GL_TIME_ELAPSED = UInt32(integerLiteral: 0x000088BF)
public let GL_TRANSFORM_FEEDBACK = UInt32(integerLiteral: 0x00008E22)
public let GL_TRANSFORM_FEEDBACK_ACTIVE = UInt32(integerLiteral: 0x00008E24)
public let GL_TRANSFORM_FEEDBACK_BARRIER_BIT = UInt32(integerLiteral: 0x000800)
public let GL_TRANSFORM_FEEDBACK_BINDING = UInt32(integerLiteral: 0x00008E25)
public let GL_TRANSFORM_FEEDBACK_BUFFER = UInt32(integerLiteral: 0x00008C8E)
public let GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE = UInt32(integerLiteral: 0x00008E24)
public let GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = UInt32(integerLiteral: 0x00008C8F)
public let GL_TRANSFORM_FEEDBACK_BUFFER_MODE = UInt32(integerLiteral: 0x00008C7F)
public let GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED = UInt32(integerLiteral: 0x00008E23)
public let GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = UInt32(integerLiteral: 0x00008C85)
public let GL_TRANSFORM_FEEDBACK_BUFFER_START = UInt32(integerLiteral: 0x00008C84)
public let GL_TRANSFORM_FEEDBACK_PAUSED = UInt32(integerLiteral: 0x00008E23)
public let GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = UInt32(integerLiteral: 0x00008C88)
public let GL_TRANSFORM_FEEDBACK_VARYINGS = UInt32(integerLiteral: 0x00008C83)
public let GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = UInt32(integerLiteral: 0x00008C76)
public let GL_TRIANGLES = UInt32(integerLiteral: 0x00004)
public let GL_TRIANGLES_ADJACENCY = UInt32(integerLiteral: 0x0000C)
public let GL_TRIANGLE_FAN = UInt32(integerLiteral: 0x00006)
public let GL_TRIANGLE_STRIP = UInt32(integerLiteral: 0x00005)
public let GL_TRIANGLE_STRIP_ADJACENCY = UInt32(integerLiteral: 0x0000D)
public let GL_TRUE = UInt32(integerLiteral: 1)
public let GL_UNDEFINED_VERTEX = UInt32(integerLiteral: 0x00008260)
public let GL_UNIFORM_ARRAY_STRIDE = UInt32(integerLiteral: 0x00008A3C)
public let GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX = UInt32(integerLiteral: 0x000092DA)
public let GL_UNIFORM_BARRIER_BIT = UInt32(integerLiteral: 0x00004)
public let GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = UInt32(integerLiteral: 0x00008A42)
public let GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = UInt32(integerLiteral: 0x00008A43)
public let GL_UNIFORM_BLOCK_BINDING = UInt32(integerLiteral: 0x00008A3F)
public let GL_UNIFORM_BLOCK_DATA_SIZE = UInt32(integerLiteral: 0x00008A40)
public let GL_UNIFORM_BLOCK_INDEX = UInt32(integerLiteral: 0x00008A3A)
public let GL_UNIFORM_BLOCK_NAME_LENGTH = UInt32(integerLiteral: 0x00008A41)
public let GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = UInt32(integerLiteral: 0x00008A46)
public let GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER = UInt32(integerLiteral: 0x00008A45)
public let GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = UInt32(integerLiteral: 0x000084F0)
public let GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = UInt32(integerLiteral: 0x000084F1)
public let GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = UInt32(integerLiteral: 0x00008A44)
public let GL_UNIFORM_BUFFER = UInt32(integerLiteral: 0x00008A11)
public let GL_UNIFORM_BUFFER_BINDING = UInt32(integerLiteral: 0x00008A28)
public let GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = UInt32(integerLiteral: 0x00008A34)
public let GL_UNIFORM_BUFFER_SIZE = UInt32(integerLiteral: 0x00008A2A)
public let GL_UNIFORM_BUFFER_START = UInt32(integerLiteral: 0x00008A29)
public let GL_UNIFORM_IS_ROW_MAJOR = UInt32(integerLiteral: 0x00008A3E)
public let GL_UNIFORM_MATRIX_STRIDE = UInt32(integerLiteral: 0x00008A3D)
public let GL_UNIFORM_NAME_LENGTH = UInt32(integerLiteral: 0x00008A39)
public let GL_UNIFORM_OFFSET = UInt32(integerLiteral: 0x00008A3B)
public let GL_UNIFORM_SIZE = UInt32(integerLiteral: 0x00008A38)
public let GL_UNIFORM_TYPE = UInt32(integerLiteral: 0x00008A37)
public let GL_UNPACK_ALIGNMENT = UInt32(integerLiteral: 0x000CF5)
public let GL_UNPACK_COMPRESSED_BLOCK_DEPTH = UInt32(integerLiteral: 0x00009129)
public let GL_UNPACK_COMPRESSED_BLOCK_HEIGHT = UInt32(integerLiteral: 0x00009128)
public let GL_UNPACK_COMPRESSED_BLOCK_SIZE = UInt32(integerLiteral: 0x0000912A)
public let GL_UNPACK_COMPRESSED_BLOCK_WIDTH = UInt32(integerLiteral: 0x00009127)
public let GL_UNPACK_IMAGE_HEIGHT = UInt32(integerLiteral: 0x0000806E)
public let GL_UNPACK_LSB_FIRST = UInt32(integerLiteral: 0x000CF1)
public let GL_UNPACK_ROW_LENGTH = UInt32(integerLiteral: 0x000CF2)
public let GL_UNPACK_SKIP_IMAGES = UInt32(integerLiteral: 0x0000806D)
public let GL_UNPACK_SKIP_PIXELS = UInt32(integerLiteral: 0x000CF4)
public let GL_UNPACK_SKIP_ROWS = UInt32(integerLiteral: 0x000CF3)
public let GL_UNPACK_SWAP_BYTES = UInt32(integerLiteral: 0x000CF0)
public let GL_UNSIGNALED = UInt32(integerLiteral: 0x00009118)
public let GL_UNSIGNED_BYTE = UInt32(integerLiteral: 0x00001401)
public let GL_UNSIGNED_BYTE_2_3_3_REV = UInt32(integerLiteral: 0x00008362)
public let GL_UNSIGNED_BYTE_3_3_2 = UInt32(integerLiteral: 0x00008032)
public let GL_UNSIGNED_INT = UInt32(integerLiteral: 0x00001405)
public let GL_UNSIGNED_INT_10F_11F_11F_REV = UInt32(integerLiteral: 0x00008C3B)
public let GL_UNSIGNED_INT_10_10_10_2 = UInt32(integerLiteral: 0x00008036)
public let GL_UNSIGNED_INT_24_8 = UInt32(integerLiteral: 0x000084FA)
public let GL_UNSIGNED_INT_2_10_10_10_REV = UInt32(integerLiteral: 0x00008368)
public let GL_UNSIGNED_INT_5_9_9_9_REV = UInt32(integerLiteral: 0x00008C3E)
public let GL_UNSIGNED_INT_8_8_8_8 = UInt32(integerLiteral: 0x00008035)
public let GL_UNSIGNED_INT_8_8_8_8_REV = UInt32(integerLiteral: 0x00008367)
public let GL_UNSIGNED_INT_ATOMIC_COUNTER = UInt32(integerLiteral: 0x000092DB)
public let GL_UNSIGNED_INT_IMAGE_1D = UInt32(integerLiteral: 0x00009062)
public let GL_UNSIGNED_INT_IMAGE_1D_ARRAY = UInt32(integerLiteral: 0x00009068)
public let GL_UNSIGNED_INT_IMAGE_2D = UInt32(integerLiteral: 0x00009063)
public let GL_UNSIGNED_INT_IMAGE_2D_ARRAY = UInt32(integerLiteral: 0x00009069)
public let GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE = UInt32(integerLiteral: 0x0000906B)
public let GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY = UInt32(integerLiteral: 0x0000906C)
public let GL_UNSIGNED_INT_IMAGE_2D_RECT = UInt32(integerLiteral: 0x00009065)
public let GL_UNSIGNED_INT_IMAGE_3D = UInt32(integerLiteral: 0x00009064)
public let GL_UNSIGNED_INT_IMAGE_BUFFER = UInt32(integerLiteral: 0x00009067)
public let GL_UNSIGNED_INT_IMAGE_CUBE = UInt32(integerLiteral: 0x00009066)
public let GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY = UInt32(integerLiteral: 0x0000906A)
public let GL_UNSIGNED_INT_SAMPLER_1D = UInt32(integerLiteral: 0x00008DD1)
public let GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = UInt32(integerLiteral: 0x00008DD6)
public let GL_UNSIGNED_INT_SAMPLER_2D = UInt32(integerLiteral: 0x00008DD2)
public let GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = UInt32(integerLiteral: 0x00008DD7)
public let GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = UInt32(integerLiteral: 0x0000910A)
public let GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = UInt32(integerLiteral: 0x0000910D)
public let GL_UNSIGNED_INT_SAMPLER_2D_RECT = UInt32(integerLiteral: 0x00008DD5)
public let GL_UNSIGNED_INT_SAMPLER_3D = UInt32(integerLiteral: 0x00008DD3)
public let GL_UNSIGNED_INT_SAMPLER_BUFFER = UInt32(integerLiteral: 0x00008DD8)
public let GL_UNSIGNED_INT_SAMPLER_CUBE = UInt32(integerLiteral: 0x00008DD4)
public let GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = UInt32(integerLiteral: 0x0000900F)
public let GL_UNSIGNED_INT_VEC2 = UInt32(integerLiteral: 0x00008DC6)
public let GL_UNSIGNED_INT_VEC3 = UInt32(integerLiteral: 0x00008DC7)
public let GL_UNSIGNED_INT_VEC4 = UInt32(integerLiteral: 0x00008DC8)
public let GL_UNSIGNED_NORMALIZED = UInt32(integerLiteral: 0x00008C17)
public let GL_UNSIGNED_SHORT = UInt32(integerLiteral: 0x00001403)
public let GL_UNSIGNED_SHORT_1_5_5_5_REV = UInt32(integerLiteral: 0x00008366)
public let GL_UNSIGNED_SHORT_4_4_4_4 = UInt32(integerLiteral: 0x00008033)
public let GL_UNSIGNED_SHORT_4_4_4_4_REV = UInt32(integerLiteral: 0x00008365)
public let GL_UNSIGNED_SHORT_5_5_5_1 = UInt32(integerLiteral: 0x00008034)
public let GL_UNSIGNED_SHORT_5_6_5 = UInt32(integerLiteral: 0x00008363)
public let GL_UNSIGNED_SHORT_5_6_5_REV = UInt32(integerLiteral: 0x00008364)
public let GL_UPPER_LEFT = UInt32(integerLiteral: 0x00008CA2)
public let GL_VALIDATE_STATUS = UInt32(integerLiteral: 0x00008B83)
public let GL_VENDOR = UInt32(integerLiteral: 0x00001F00)
public let GL_VERSION = UInt32(integerLiteral: 0x00001F02)
public let GL_VERTEX_ARRAY_BINDING = UInt32(integerLiteral: 0x000085B5)
public let GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT = UInt32(integerLiteral: 0x00001)
public let GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = UInt32(integerLiteral: 0x0000889F)
public let GL_VERTEX_ATTRIB_ARRAY_DIVISOR = UInt32(integerLiteral: 0x000088FE)
public let GL_VERTEX_ATTRIB_ARRAY_ENABLED = UInt32(integerLiteral: 0x00008622)
public let GL_VERTEX_ATTRIB_ARRAY_INTEGER = UInt32(integerLiteral: 0x000088FD)
public let GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = UInt32(integerLiteral: 0x0000886A)
public let GL_VERTEX_ATTRIB_ARRAY_POINTER = UInt32(integerLiteral: 0x00008645)
public let GL_VERTEX_ATTRIB_ARRAY_SIZE = UInt32(integerLiteral: 0x00008623)
public let GL_VERTEX_ATTRIB_ARRAY_STRIDE = UInt32(integerLiteral: 0x00008624)
public let GL_VERTEX_ATTRIB_ARRAY_TYPE = UInt32(integerLiteral: 0x00008625)
public let GL_VERTEX_PROGRAM_POINT_SIZE = UInt32(integerLiteral: 0x00008642)
public let GL_VERTEX_SHADER = UInt32(integerLiteral: 0x00008B31)
public let GL_VERTEX_SHADER_BIT = UInt32(integerLiteral: 0x00001)
public let GL_VIEWPORT = UInt32(integerLiteral: 0x000BA2)
public let GL_VIEWPORT_BOUNDS_RANGE = UInt32(integerLiteral: 0x0000825D)
public let GL_VIEWPORT_INDEX_PROVOKING_VERTEX = UInt32(integerLiteral: 0x0000825F)
public let GL_VIEWPORT_SUBPIXEL_BITS = UInt32(integerLiteral: 0x0000825C)
public let GL_WAIT_FAILED = UInt32(integerLiteral: 0x0000911D)
public let GL_WRITE_ONLY = UInt32(integerLiteral: 0x000088B9)
public let GL_XOR = UInt32(integerLiteral: 0x00001506)
public let GL_ZERO = UInt32(integerLiteral: 0)
